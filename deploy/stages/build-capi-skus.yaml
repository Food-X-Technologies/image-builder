# Required pipeline variables
parameters:
  - name: BUILD_POOL # Azure DevOps build pool to use
    type: string
  - name: CONTAINER_IMAGE # Dev container image URL to use. Should have Azure CLI, Packer and Ansible.
    type: string
  - name: AZURE_TENANT_ID_VHD # tenant ID to build the vhd
    type: string
  - name: AZURE_CLIENT_ID_VHD # Service principal ID to build the vhd
    type: string
  - name: AZURE_CLIENT_SECRET_VHD # Service principal secret to build the vhd
    type: string
  - name: AZURE_SUBSCRIPTION_ID_VHD # Subscription ID to build the vhd
    type: string
  - name: AZURE_TENANT_ID_SKU # tenant ID to PUT the SKU
    type: string
  - name: AZURE_CLIENT_ID_SKU # Service principal ID to PUT the SKU
    type: string
  - name: AZURE_CLIENT_SECRET_SKU # Service principal secret to PUT the SKU
    type: string
  - name: KUBERNETES_VERSION # version of Kubernetes to create the sku for, e.g. `1.16.2`
    type: string
  - name: PUBLISHER # the name of the publisher to create the sku for
    type: string
  - name: OFFER # the name of the offer to create the sku for
    type: string
  - name: SKU_TEMPLATE_FILE # the base template file to use for the sku
    type: string
  - name: OS # target of build e.g. `Ubuntu/Windows`
    type: string
  - name: OS_VERSION # target of build e.g. `18.04/2004/2019`
    type: string

variables:
  BUILD_POOL: ${{ parameters.BUILD_POOL }}
  CONTAINER_IMAGE: ${{ parameters.CONTAINER_IMAGE }}
  AZURE_TENANT_ID_VHD: ${{ parameters.AZURE_TENANT_ID_VHD }}
  AZURE_CLIENT_ID_VHD: ${{ parameters.AZURE_CLIENT_ID_VHD }}
  AZURE_CLIENT_SECRET_VHD: ${{ parameters.AZURE_CLIENT_SECRET_VHD }}
  AZURE_SUBSCRIPTION_ID_VHD: ${{ parameters.AZURE_SUBSCRIPTION_ID_VHD }}
  AZURE_TENANT_ID_SKU: ${{ parameters.AZURE_TENANT_ID_SKU }}
  AZURE_CLIENT_ID_SKU: ${{ parameters.AZURE_CLIENT_ID_SKU }}
  AZURE_CLIENT_SECRET_SKU: ${{ parameters.AZURE_CLIENT_SECRET_SKU }}
  KUBERNETES_VERSION: ${{ parameters.KUBERNETES_VERSION }}
  PUBLISHER: ${{ parameters.PUBLISHER }}
  OFFER: ${{ parameters.OFFER }}
  SKU_TEMPLATE_FILE: ${{ parameters.SKU_TEMPLATE_FILE }}
  OS: ${{ parameters.OS }}
  OS_VERSION: ${{ parameters.OS_VERSION }}
  STAGE_PREFIX: $(OS)-$(OS_VERSION)-${{ replace(parameters.KUBERNETES_VERSION, '.', '-') }}

stages:
  - stage: $(STAGE_PREFIX)-vhd
    displayName: Create $(OS) $(OS_VERSION) VHD for K8s $(KUBERNETES_VERSION)
    jobs:
    - template: /images/capi/packer/azure/.pipelines/build-vhd.yaml
    variables:
      AZURE_TENANT_ID: $(AZURE_TENANT_ID_VHD)
      AZURE_CLIENT_ID: $(AZURE_CLIENT_ID_VHD)
      AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET_VHD)
      AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID_VHD)

  - stage: $(STAGE_PREFIX)-sku
    displayName: Create $(OS) $(OS_VERSION) SKU for K8s $(KUBERNETES_VERSION)
    condition: and(succeeded(), eq(variables.CLEANUP, 'False'))
    jobs:
    - template: /images/capi/packer/azure/.pipelines/create-sku.yaml
    variables:
      AZURE_TENANT_ID: $(AZURE_TENANT_ID_SKU)
      AZURE_CLIENT_ID: $(AZURE_CLIENT_ID_SKU)
      AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET_SKU)

  - stage: $(STAGE_PREFIX)-disk_version
    displayName: Create $(OS) $(OS_VERSION) disk version for K8s $(KUBERNETES_VERSION)
    condition: and(succeeded(), eq(variables.CLEANUP, 'False'))
    jobs:
    - template: /images/capi/packer/azure/.pipelines/create-disk-version.yaml
    variables:
      AZURE_TENANT_ID: $(AZURE_TENANT_ID_SKU)
      AZURE_CLIENT_ID: $(AZURE_CLIENT_ID_SKU)
      AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET_SKU)
