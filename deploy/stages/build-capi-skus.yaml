# Required pipeline variables
parameters:
  - name: KUBERNETES_VERSION # version of Kubernetes to create the sku for, e.g. `1.16.2`
    type: string
  - name: OS # target of build e.g. `Ubuntu/Windows`
    type: string
  - name: OS_VERSION # target of build e.g. `18.04/2004/2019`
    type: string

stages:
  - stage: $(OS)-$(OS_VERSION)-${{ replace(parameters.KUBERNETES_VERSION, '.', '-') }}-vhd
    jobs:
    - template: /images/capi/packer/azure/.pipelines/build-vhd.yaml
    variables:
      AZURE_TENANT_ID: $(AZURE_TENANT_ID_VHD)
      AZURE_CLIENT_ID: $(AZURE_CLIENT_ID_VHD)
      AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET_VHD)
      AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID_VHD)
      KUBERNETES_VERSION: ${{ parameters.KUBERNETES_VERSION }}
      OS: ${{ parameters.OS }}
      OS_VERSION: ${{ parameters.OS_VERSION }}

  - stage: $(OS)-$(OS_VERSION)-${{ replace(parameters.KUBERNETES_VERSION, '.', '-') }}-sku
    condition: and(succeeded(), eq(variables.CLEANUP, 'False'))
    jobs:
    - template: /images/capi/packer/azure/.pipelines/create-sku.yaml
    variables:
      AZURE_TENANT_ID: $(AZURE_TENANT_ID_SKU)
      AZURE_CLIENT_ID: $(AZURE_CLIENT_ID_SKU)
      AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET_SKU)
      KUBERNETES_VERSION: ${{ parameters.KUBERNETES_VERSION }}
      OS: ${{ parameters.OS }}
      OS_VERSION: ${{ parameters.OS_VERSION }}

  - stage: $(OS)-$(OS_VERSION)-${{ replace(parameters.KUBERNETES_VERSION, '.', '-') }}-disk_version
    condition: and(succeeded(), eq(variables.CLEANUP, 'False'))
    jobs:
    - template: /images/capi/packer/azure/.pipelines/create-disk-version.yaml
    variables:
      AZURE_TENANT_ID: $(AZURE_TENANT_ID_SKU)
      AZURE_CLIENT_ID: $(AZURE_CLIENT_ID_SKU)
      AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET_SKU)
      KUBERNETES_VERSION: ${{ parameters.KUBERNETES_VERSION }}
      OS: ${{ parameters.OS }}
      OS_VERSION: ${{ parameters.OS_VERSION }}
